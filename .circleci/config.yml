# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  github-cli: circleci/github-cli@2.5.0

commands:
  build-and-test-unix-like:
    steps:
      - run:
          name: Build
          command: cargo build
      - run:
          # TODO: make this run a useful thing
          name: test build
          command: bash test/test.sh
      - run:
          name: move build to useful place
          command: |
            mkdir tmp/
            mv target/debug/net-task tmp/
      # TODO: we want to bootstrap this way, or not??

jobs:
  build:
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/rust:1.73.0

    steps:
      # Checkout the code as the first step.
      - checkout
      - build-and-test-unix-like
      - run:
          name: build release package
          command: tmp/net-task -t ./net-task-ci.yml run ci:create-arch-tagged-release
      - run:
          name: temp move binary over
          command: mv tmp/net-task target/net-task/net-task-tmp
      - persist_to_workspace:
          root: target/net-task
          paths:
            - net-task-tmp
            - net-task/

  release:
    docker:
      - image: cimg/rust:1.73.0
    steps:
      - github-cli/install
      # checkout to get the net-task files.
      # ... could also use a URL, I guess....
      - checkout
      - attach_workspace:
          at: built-binaries
      - run:
          name: authorize
          command: built-binaries/net-task-tmp -t ./net-task-ci.yml run ci:gh:auth
      - run:
          name: upload binaries
          command: built-binaries/net-task-tmp -t ./net-task-ci.yml run ci:gh:upload-binary



# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  feature-branch-test:
    jobs:
      - build
      - release:
          requires:
            - build
          context:
            - github
